<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=8,IE=9,IE=10,IE=edge" />
	<title>Cinebox &#8211; M.ichael.co.uk</title>
	<meta name="viewport" content="initial-scale=1.0, minimum-scale=1.0" />
	<meta name="description" content="A small device that displays local movie listings.">
	<meta name="author" content="Michael Cook">
	<meta name="keywords" content="electronics">
	<link rel="canonical" href="http://m.ichael.co.uk/electronics/example.html">

	<!--[if lte IE 8]>
		<script> // IE8 html5 element support
			document.createElement("header"); document.createElement("nav");
			document.createElement("main");   document.createElement("footer");
			document.createElement("section");
		</script>
	<![endif]-->
	<link href='http://fonts.googleapis.com/css?family=Roboto:400,400italic,500,700' rel='stylesheet' type='text/css'>
	<!--<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">-->
	<link type="text/css" rel="stylesheet" href="/assets/site.css">
</head>

<body><a class="skip" href="#content">Skip to content</a>

<body>
	<div class="wrapper">

		<header class="header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-xs-6 col-sm-2 inline-block">
				<a href="/" class="header__logo js-silliness" title="M.ichael.co.uk">
					<img src="/img/header__motd.png" srcset="/img/header__motd.png 1x, /img/header__motd@2x.png 2x, /img/header__motd@3x.png 3x, " alt="" />
				</a>
			</div>

			
			<div class="col-xs-12 col-sm-7 sm-plus-inline-block static">
				<nav role="navigation" class="nav nav--primary">
					

					
						
					
						
							<a class="nav__item nav__item--electronics
							
								nav__item--active
							
							" href="/electronics">
								<i class="fa fa-code-fork"></i>Electronics
							</a>
						
					
						
							<a class="nav__item nav__item--websites
							
							" href="/websites">
								<i class="fa fa-laptop"></i>Websites
							</a>
						
					
						
					
						
					
						
					

					<a class="nav__item nav__item--about
					
					" href="/info/"><i class="fa fa-user"></i>Info</a>
					<a class="nav__item nav__item--contact
					
					" href="/contact/"><i class="fa fa-comments-o"></i>Contact</a>
				</nav>
			</div>

			
			<div class="col-xs-6 col-sm-3 header__social inline-block">
				<ul class="social">
	
		<li><a class="fa fa-fw fa-github" href="https://github.com/entozoon"></a></li>
	
	
		<li><a class="fa fa-fw fa-twitter" href="https://twitter.com/entozoon"></a></li>
	
	
		<li><a class="fa fa-fw fa-envelope" href="mailto:michael@m.ichael.co.uk"></a></li>
	
	
		<li><a class="fa fa-fw fa-linkedin" href="https://uk.linkedin.com/in/michaelmorgancook"></a></li>
	
</ul>

			</div>
		</div>
	</div>

	<div class="nav__button nav__button--header visible-xs">
		<i class="fa fa-bars"></i>
	</div>
</header>

		<main class="content" id="content" role="main" tabindex="-1">

			


<div class="gallery--linked__wrapper">

<div class="gallery gallery--linked__main" style="display:none">

<div>
	<a href="/assets/cinebox1.jpg">
		<img src="/assets/cinebox1.jpg" alt="Cinebox" />
	</a>
</div>




<div>
	<a href="/assets/cinebox2.jpg">
		<img src="/assets/cinebox2.jpg" alt="Cinebox screen" />
	</a>
</div>




<div>
	<a href="/assets/cinebox3.jpg">
		<img src="/assets/cinebox3.jpg" alt="Cinebox first layer" />
	</a>
</div>




<div>
	<a href="/assets/cinebox4.jpg">
		<img src="/assets/cinebox4.jpg" alt="Cinebox second layer" />
	</a>
</div>




<div>
	<a href="/assets/cinebox5.jpg">
		<img src="/assets/cinebox5.jpg" alt="Cinebox third layer" />
	</a>
</div>




<div>
	<a href="/assets/cinebox6.jpg">
		<img src="/assets/cinebox6.jpg" alt="Cinebox internals" />
	</a>
</div>




</div>

<div class="background--2">
	<div class="container-fluid">
		<div class="row">
			<div class="col-xs-12">

				<div class="gallery gallery--linked__thumbs gallery--arrows" style="display:none" data-gallery-breakpoints="[3,6,8,10]">
	
					<div class="gallery__thumb" style="background-image:url(/assets/cinebox1.jpg)"></div>
	
					<div class="gallery__thumb" style="background-image:url(/assets/cinebox2.jpg)"></div>
	
					<div class="gallery__thumb" style="background-image:url(/assets/cinebox3.jpg)"></div>
	
					<div class="gallery__thumb" style="background-image:url(/assets/cinebox4.jpg)"></div>
	
					<div class="gallery__thumb" style="background-image:url(/assets/cinebox5.jpg)"></div>
	
					<div class="gallery__thumb" style="background-image:url(/assets/cinebox6.jpg)"></div>
	
				</div>

			</div>
		</div>
	</div>
</div>

</div>



<div class="container-fluid">
	<div class="row">
		<div class="col-xs-12">
			<article class="project">
  				# Lorem

Cinebox is a small device that shows local movie theatre listings. It's microcontroller is an Arduino Pro Mini that connects to the internet via an ESP8266 (ESP-01) gathering data from webserver scripts that access the Cineworld (nearby cinema company) API.
<!--readmore-->


## Lorem

If I were to build this again, I wouldn't use an Arduino at all. I realised during the course of the project that it is actually much slower than the ESP8266 and has less memory, which was actually a big deal when coding intro graphic arrays.

If I were to use a different ESP8266 model such as the ESP-03 which has a whole bunch of inputs and outputs, I reckon it could run the whole program and update the screen pretty much instantly and with high quality images rather than the god-knows-how-many seconds it currently takes.




~~~
function sassWatch(data) {
	var sassStyle = isProduction === true ? 'compressed' : 'expanded';

	//gulp.src(data.watch)
	//.pipe(watch({glob: data.watch, emitOnGlob: true, silent: true}, function() {

	watch(data.watch, {emitOnGlob: true, silent: true}, function(file, cb) {

	sassCompiling();

	var css = rubySass(data.src, { sourcemap: true })
~~~
{: .beast data-mode="javascript"}





Inline code blocks too ``function proper() { console.log('code blocks'); }``





Testing project layout.


https://github.com/jekyll-assets/jekyll-assets/tree/legacy#jekyllassets


https://github.com/Shopify/liquid/wiki/Liquid-for-Designers

### Can link to other posts:
[disabled while figuring out directory structure]


### When I come to it, include some photos of my sketches, it's gold mate.
Srs.


# \#

## \#\#

### \#\#\#

#### \#\#\#\#


There is a significant amount of subtle, yet precisely calibrated, styling to ensure
that your content is emphasized while still looking aesthetically pleasing.

All links are easy to [locate and discern](#), yet don't detract from the harmony
of a paragraph. The _same_ goes for italics and __bold__ elements. Even the the strikeout
works if <del>for some reason you need to update your post</del>. For consistency's sake,
<ins>The same goes for insertions</ins>, of course.

### Code, with syntax highlighting

Here's an example of some ruby code with line anchors.

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1"># The most awesome of classes</span>
<span class="k">class</span> <span class="nc">Awesome</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
	<span class="kp">include</span> <span class="no">EvenMoreAwesome</span>

	<span class="n">validates_presence_of</span> <span class="ss">:something</span>
	<span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">email_format: </span><span class="kp">true</span>

	<span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">email</span><span class="p">,</span> <span class="nb">name</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
		<span class="nb">self</span><span class="p">.</span><span class="nf">email</span> <span class="o">=</span> <span class="n">email</span>
		<span class="nb">self</span><span class="p">.</span><span class="nf">name</span> <span class="o">=</span> <span class="nb">name</span>
		<span class="nb">self</span><span class="p">.</span><span class="nf">favorite_number</span> <span class="o">=</span> <span class="mi">12</span>
		<span class="nb">puts</span> <span class="s1">'created awesomeness'</span>
	<span class="k">end</span>

	<span class="k">def</span> <span class="nf">email_format</span>
		<span class="n">email</span> <span class="o">=~</span> <span class="sr">/\S+@\S+\.\S+/</span>
	<span class="k">end</span>
<span class="k">end</span></code></pre></figure>

Here's some CSS:

<figure class="highlight"><pre><code class="language-css" data-lang="css"><span class="nc">.foobar</span> <span class="p">{</span>
	<span class="c">/* Named colors rule */</span>
	<span class="nl">color</span><span class="p">:</span> <span class="no">tomato</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

# Headings!

They're responsive, and well-proportioned (in `padding`, `line-height`, `margin`, and `font-size`).
They also heavily rely on the awesome utility, [BASSCSS](http://www.basscss.com/).

##### They draw the perfect amount of attention

This allows your content to have the proper informational and contextual hierarchy. Yay.

### There are lists, too

	* Apples
	* Oranges
	* Potatoes
	* Milk

	1. Mow the lawn
	2. Feed the dog
	3. Dance

### Images look great, too


### There are also pretty colors

Also the result of [BASSCSS](http://www.basscss.com/), you can <span class="bg-dark-gray white">highlight</span> certain components
of a <span class="red">post</span> <span class="mid-gray">with</span> <span class="green">CSS</span> <span class="orange">classes</span>.

I don't recommend using blue, though. It looks like a <span class="blue">link</span>.

### Stylish blockquotes included

You can use the markdown quote syntax, `>` for simple quotes.

> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse quis porta mauris.

However, you need to inject html if you'd like a citation footer. I will be working on a way to
hopefully sidestep this inconvenience.

<blockquote>
	<p>
		Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.
	</p>
	<footer><cite title="Antoine de Saint-Exupéry">Antoine de Saint-Exupéry</cite></footer>
</blockquote>

### There's more being added all the time

Checkout the [Github repository](https://github.com/johnotander/pixyll) to request,
or add, features.

Happy writing.

			</article>
		</div>
	</div>
</div>




		</main>

		<footer class="footer">
	<div class="container-fluid">
		<div class="row">
			<div class="col-xs-12">
				<span class="js-silliness">&copy; Michael Cook <span class="js-year-update">2015</span></span>
			</div>
		</div>
	</div>
</footer>

	</div>

	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
	<!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>-->
	<script type="text/javascript" src="/assets/codemirrormix.js"></script>
	<script type="text/javascript" src="/assets/site.js"></script>
</body>
</html>
